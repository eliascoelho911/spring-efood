services:
  service-registry:
    build:
      context: .
      dockerfile: service-registry/Dockerfile
      cache_from:
        - service-registry:latest
    ports:
      - "8081:8081"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    volumes:
      - gradle_cache:/root/.gradle
      - gradle_build_cache:/app/.gradle
    networks:
      - efood-network

  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: efood_db
      POSTGRES_USER: efood_user
      POSTGRES_PASSWORD: efood_password
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U efood_user -d efood_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - efood-network

  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
      cache_from:
        - api-gateway:latest
    ports:
      - "8082:8080"
    environment:
      - EUREKA_URL=http://service-registry:8081/eureka
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      service-registry:
        condition: service_healthy
    volumes:
      - gradle_cache:/root/.gradle
      - gradle_build_cache:/app/.gradle
    networks:
      - efood-network

  ms-orders:
    build:
      context: .
      dockerfile: ms-orders/Dockerfile
      cache_from:
        - ms-orders:latest
    deploy:
      replicas: 1
    environment:
      - EUREKA_URL=http://service-registry:8081/eureka
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/orders_db
      - SPRING_DATASOURCE_USERNAME=efood_user
      - SPRING_DATASOURCE_PASSWORD=efood_password
    depends_on:
      service-registry:
        condition: service_healthy
      postgres:
        condition: service_healthy
    volumes:
      - gradle_cache:/root/.gradle
      - gradle_build_cache:/app/.gradle
    networks:
      - efood-network

  ms-payments:
    build:
      context: .
      dockerfile: ms-payments/Dockerfile
      cache_from:
        - ms-payments:latest
    deploy:
      replicas: 1
    environment:
      - EUREKA_URL=http://service-registry:8081/eureka
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/payments_db
      - SPRING_DATASOURCE_USERNAME=efood_user
      - SPRING_DATASOURCE_PASSWORD=efood_password
    depends_on:
      service-registry:
        condition: service_healthy
      postgres:
        condition: service_healthy
    volumes:
      - gradle_cache:/root/.gradle
      - gradle_build_cache:/app/.gradle
    networks:
      - efood-network

volumes:
  postgres_data:
  gradle_cache:
  gradle_build_cache:

networks:
  efood-network:
    driver: bridge